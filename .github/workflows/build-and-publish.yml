name: Build and Publish Packages

on:
  push:
    branches:
      - master
    paths:
      - 'packages/core/**'
      - 'packages/starter-kit/**'
  workflow_dispatch:
    inputs:
      versionType:
        description: 'Version type for npm publish'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor

jobs:
  build-and-publish:
    runs-on:
      group: default
    name: Build and Publish Core and Starter-Kit
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_ACTION_TOKEN }}
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
          
      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN_INFO}}" >> ~/.npmrc
          
      - name: Install dependencies and build packages
        run: |
          pnpm install --no-frozen-lockfile
          pnpm run build
          
      - name: Check for changes
        run: |
          git config --global user.name ${{secrets.GIT_DEVOPS_USERNAME}}
          git config --global user.email "${{secrets.GIT_DEVOPS_EMAIL}}@users.noreply.github.com"
          git add .
          if git diff --cached --name-only | grep .; then
            echo "NEW_CHANGES=true" >> $GITHUB_ENV
          else
            echo "NEW_CHANGES=false" >> $GITHUB_ENV
          fi
          
      - name: Commit build artifacts
        if: ${{ env.NEW_CHANGES == 'true' }}
        run: |
          git status
          git commit -m "build(core): ðŸ“¦ Auto build assets"
          git push
          
      - name: Publish to npm
        if: ${{ env.NEW_CHANGES == 'true' || github.event.inputs.versionType }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_INFO}}
        run: |
          # Determine version bump type
          VERSION_TYPE=${{ github.event.inputs.versionType || 'patch' }}
          
          # Use pnpm to version all packages
          pnpm version $VERSION_TYPE
          
          # Publish only the core package (form-builder-mock is excluded)
          pnpm publish --filter "@salla.sa/twilight-bundles" --filter "@salla.sa/twilight-starter-kit" --access public --no-git-checks
